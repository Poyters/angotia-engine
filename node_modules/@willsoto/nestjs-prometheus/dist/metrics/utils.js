"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getToken = exports.getOrCreateMetric = void 0;
const client = require("prom-client");
/**
 * @internal
 */
function getOrCreateMetric(type, options) {
    const existingMetric = client.register.getSingleMetric(options.name);
    if (existingMetric) {
        return existingMetric;
    }
    switch (type) {
        case "Gauge":
            return new client.Gauge(options);
        case "Counter":
            return new client.Counter(options);
        case "Histogram":
            return new client.Histogram(options);
        case "Summary":
            return new client.Summary(options);
        default:
            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions
            throw new Error(`Unknown type: ${type}`);
    }
}
exports.getOrCreateMetric = getOrCreateMetric;
/**
 * @public
 */
function getToken(name) {
    return `PROM_METRIC_${name.toUpperCase()}`;
}
exports.getToken = getToken;
//# sourceMappingURL=utils.js.map